{"ast":null,"code":"var _jsxFileName = \"/Users/manas/Desktop/Scrapy/seo/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport ScrapeBar from \"./components/ScrapeBar\";\nimport LinkCard from \"./components/LinkCard\";\n// import './LinkCard.css'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [scrapedData, setScrapedData] = useState(null);\n\n  // This function will be passed to TextForm so it can update the scraped data\n  const updateScrapedData = data => {\n    setScrapedData(data);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Chimpzlab\",\n      aboutText: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(ScrapeBar, {\n        updateScrapedData: updateScrapedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), scrapedData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-container\",\n        children: Object.entries(scrapedData).map(([category, content], index) => /*#__PURE__*/_jsxDEV(LinkCard, {\n          title: category,\n          content: content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"WGYKgdAxv0ExdcuEco4O509dbp4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","ScrapeBar","LinkCard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","scrapedData","setScrapedData","updateScrapedData","data","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","entries","map","category","content","index","_c","$RefreshReg$"],"sources":["/Users/manas/Desktop/Scrapy/seo/src/App.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport ScrapeBar from \"./components/ScrapeBar\";\nimport LinkCard from \"./components/LinkCard\";\n// import './LinkCard.css'\n\nfunction App() {\n  const [scrapedData, setScrapedData] = useState(null);\n\n  // This function will be passed to TextForm so it can update the scraped data\n  const updateScrapedData = (data) => {\n    setScrapedData(data);\n  };\n\n  return (\n    <>\n      <Navbar title=\"Chimpzlab\" aboutText=\"About\" />\n      <div className=\"container my-3\">\n        <ScrapeBar updateScrapedData={updateScrapedData} />\n        {scrapedData && (\n          <div className=\"cards-container\">\n            {Object.entries(scrapedData).map(([category, content], index) => (\n              <LinkCard key={index} title={category} content={content} />\n            ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAMY,iBAAiB,GAAIC,IAAI,IAAK;IAClCF,cAAc,CAACE,IAAI,CAAC;EACtB,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA,CAACJ,MAAM;MAACc,KAAK,EAAC,WAAW;MAACC,SAAS,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9Cf,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAP,QAAA,gBAC7BT,OAAA,CAACH,SAAS;QAACU,iBAAiB,EAAEA;MAAkB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAClDV,WAAW,iBACVL,OAAA;QAAKgB,SAAS,EAAC,iBAAiB;QAAAP,QAAA,EAC7BQ,MAAM,CAACC,OAAO,CAACb,WAAW,CAAC,CAACc,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAEC,OAAO,CAAC,EAAEC,KAAK,kBAC1DtB,OAAA,CAACF,QAAQ;UAAaY,KAAK,EAAEU,QAAS;UAACC,OAAO,EAAEA;QAAQ,GAAzCC,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsC,CAC3D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP;AAACX,EAAA,CAvBQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}