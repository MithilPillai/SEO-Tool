{"ast":null,"code":"var _jsxFileName = \"/Users/manas/Desktop/Scrapy/seo/src/components/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleClearClick = () => {\n    setOutput(\"\");\n  };\n  const handleOnChange = event => {\n    setUrl(event.target.value);\n  };\n  const handleScrapeClick = async () => {\n    try {\n      // Set loading to true while waiting for the response\n      setLoading(true);\n\n      // Make a POST request to your backend with the URL\n      const response = await fetch('http://localhost:3001/scrape', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          url\n        })\n      });\n\n      // Check if the request was successful (status code 200)\n      if (response.ok) {\n        const data = await response.json();\n        // Handle the response data from the backend\n        console.log('Scrape Successful:', data);\n        // Set the output state with the data you want to display\n        setOutput(JSON.stringify(data, null, 2)); // Example: Convert data to JSON string with indentation\n      } else {\n        // Handle errors from the backend\n        console.error('Scrape Failed:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error during Scrape:', error.message);\n    } finally {\n      // Set loading to false after the request is complete\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"d-flex my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control me-2\",\n          type: \"search\",\n          placeholder: \"Enter the URL\",\n          \"aria-label\": \"Search\",\n          style: {\n            width: '350px'\n          },\n          value: url,\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          onClick: handleScrapeClick,\n          children: \"Scrape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [props.heading, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: loading ? 'Loading...' : output,\n          readOnly: true,\n          id: \"myBox\",\n          rows: \"16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleClearClick,\n        children: \" Clear Text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"MQm1GWP61yCSsup6GivVQZIS1vE=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","url","setUrl","output","setOutput","loading","setLoading","handleClearClick","handleOnChange","event","target","value","handleScrapeClick","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","error","statusText","message","children","className","type","placeholder","style","width","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","heading","readOnly","id","rows","_c","$RefreshReg$"],"sources":["/Users/manas/Desktop/Scrapy/seo/src/components/TextForm.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [output, setOutput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleClearClick = () => {\r\n    setOutput(\"\");\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    setUrl(event.target.value);\r\n  }\r\n\r\n  const handleScrapeClick = async () => {\r\n    try {\r\n      // Set loading to true while waiting for the response\r\n      setLoading(true);\r\n\r\n      // Make a POST request to your backend with the URL\r\n      const response = await fetch('http://localhost:3001/scrape', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ url }),\r\n      });\r\n\r\n      // Check if the request was successful (status code 200)\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        // Handle the response data from the backend\r\n        console.log('Scrape Successful:', data);\r\n        // Set the output state with the data you want to display\r\n        setOutput(JSON.stringify(data, null, 2)); // Example: Convert data to JSON string with indentation\r\n      } else {\r\n        // Handle errors from the backend\r\n        console.error('Scrape Failed:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during Scrape:', error.message);\r\n    } finally {\r\n      // Set loading to false after the request is complete\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex justify-content-center'>\r\n        <form className=\"d-flex my-3\">\r\n          <input\r\n            className=\"form-control me-2\"\r\n            type=\"search\"\r\n            placeholder=\"Enter the URL\"\r\n            aria-label=\"Search\"\r\n            style={{ width: '350px' }}\r\n            value={url}\r\n            onChange={handleOnChange}\r\n          />\r\n          <button className=\"btn btn-primary\" type=\"button\" onClick={handleScrapeClick}>\r\n            Scrape\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className='container'>\r\n        <h1>{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={loading ? 'Loading...' : output}\r\n            readOnly\r\n            id=\"myBox\"\r\n            rows=\"16\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}> Clear Text </button>\r\n      </div>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}