{"ast":null,"code":"var _jsxFileName = \"/Users/manas/Desktop/Scrapy/seo/src/components/LinkCard.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import '../LinkCard.css'; // Import the CSS file\n\n// const LinkCard = ({ title, content }) => {\n//   const [showLinks, setShowLinks] = useState(false);\n\n//   const handleCardClick = () => {\n//     setShowLinks(!showLinks);\n//   };\n\n//   return (\n//     <div className=\"card-container\">\n//     <div className={`card ${showLinks ? 'expanded' : ''}`} onClick={handleCardClick}>\n//       <div className=\"card-body\">\n//         <h5 className=\"card-title\">{title.replace(/([A-Z])/g, ' $1').trim()}</h5>\n//         {typeof content === 'object' && (\n//           <button\n//             type=\"button\"\n//             className={`btn btn-sm btn-secondary ${showLinks ? 'up' : 'down'}`}\n//             onClick={handleCardClick}\n//           >\n//             <i className=\"bi bi-arrow\" />\n//           </button>\n//         )}\n//         {typeof content === 'object' ? (\n//           <>\n//             <p className=\"card-text\">Number of items: {Object.keys(content).length}</p>\n//             {showLinks && (\n//               <ul>\n//                 {Object.entries(content).map(([key, value]) => (\n//                   <li key={key}>\n//                     <strong>{key}</strong>: {value}\n//                   </li>\n//                 ))}\n//               </ul>\n//             )}\n//           </>\n//         ) : (\n//           // If content is a string (e.g., metadata or heading tags)\n//           <p className=\"card-text\">{content}</p>\n//         )}\n//       </div>\n//     </div>\n//     </div>\n\n//   );\n// };\n\n// export default LinkCard;\n\nimport React, { useState } from 'react';\nimport '../LinkCard.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LinkCard = ({\n  title,\n  content\n}) => {\n  _s();\n  const [showLinks, setShowLinks] = useState(false);\n  const handleCardClick = () => {\n    setShowLinks(!showLinks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${showLinks ? 'expanded' : ''}`,\n      onClick: handleCardClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: title.replace(/([A-Z])/g, ' $1').trim()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), typeof content === 'object' && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `btn btn-sm btn-secondary ${showLinks ? 'up' : 'down'}`,\n          onClick: handleCardClick,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), typeof content === 'object' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [\"Number of items: \", Object.keys(content).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), showLinks && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(content).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), \": \", typeof value === 'object' ? JSON.stringify(value) : value.toString()]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(LinkCard, \"l7SXRhm0tGdFv3onRRCpsmmRnS4=\");\n_c = LinkCard;\nexport default LinkCard;\nvar _c;\n$RefreshReg$(_c, \"LinkCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","LinkCard","title","content","_s","showLinks","setShowLinks","handleCardClick","className","children","onClick","replace","trim","fileName","_jsxFileName","lineNumber","columnNumber","type","Object","keys","length","entries","map","key","value","JSON","stringify","toString","_c","$RefreshReg$"],"sources":["/Users/manas/Desktop/Scrapy/seo/src/components/LinkCard.js"],"sourcesContent":["\n\n// import React, { useState } from 'react';\n// import '../LinkCard.css'; // Import the CSS file\n\n// const LinkCard = ({ title, content }) => {\n//   const [showLinks, setShowLinks] = useState(false);\n\n//   const handleCardClick = () => {\n//     setShowLinks(!showLinks);\n//   };\n\n//   return (\n//     <div className=\"card-container\">\n//     <div className={`card ${showLinks ? 'expanded' : ''}`} onClick={handleCardClick}>\n//       <div className=\"card-body\">\n//         <h5 className=\"card-title\">{title.replace(/([A-Z])/g, ' $1').trim()}</h5>\n//         {typeof content === 'object' && (\n//           <button\n//             type=\"button\"\n//             className={`btn btn-sm btn-secondary ${showLinks ? 'up' : 'down'}`}\n//             onClick={handleCardClick}\n//           >\n//             <i className=\"bi bi-arrow\" />\n//           </button>\n//         )}\n//         {typeof content === 'object' ? (\n//           <>\n//             <p className=\"card-text\">Number of items: {Object.keys(content).length}</p>\n//             {showLinks && (\n//               <ul>\n//                 {Object.entries(content).map(([key, value]) => (\n//                   <li key={key}>\n//                     <strong>{key}</strong>: {value}\n//                   </li>\n//                 ))}\n//               </ul>\n//             )}\n//           </>\n//         ) : (\n//           // If content is a string (e.g., metadata or heading tags)\n//           <p className=\"card-text\">{content}</p>\n//         )}\n//       </div>\n//     </div>\n//     </div>\n\n//   );\n// };\n\n// export default LinkCard;\n\n\nimport React, { useState } from 'react';\nimport '../LinkCard.css'; // Import the CSS file\n\nconst LinkCard = ({ title, content }) => {\n  const [showLinks, setShowLinks] = useState(false);\n\n  const handleCardClick = () => {\n    setShowLinks(!showLinks);\n  };\n\n  return (\n    <div className=\"card-container\">\n    <div className={`card ${showLinks ? 'expanded' : ''}`} onClick={handleCardClick}>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title.replace(/([A-Z])/g, ' $1').trim()}</h5>\n        {typeof content === 'object' && (\n          <button\n            type=\"button\"\n            className={`btn btn-sm btn-secondary ${showLinks ? 'up' : 'down'}`}\n            onClick={handleCardClick}\n          >\n            <i className=\"bi bi-arrow\" />\n          </button>\n        )}\n        {typeof content === 'object' ? (\n          <>\n            <p className=\"card-text\">Number of items: {Object.keys(content).length}</p>\n            {showLinks && (\n              <ul>\n                {Object.entries(content).map(([key, value]) => (\n                  <li key={key}>\n                    <strong>{key}</strong>: {typeof value === 'object' ? JSON.stringify(value) : value.toString()}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </>\n        ) : (\n          <p className=\"card-text\">{content}</p>\n        )}\n      </div>\n    </div>\n    </div>\n\n  );\n};\n\nexport default LinkCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}